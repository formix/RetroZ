#target rom

; TETRIS FOR THE RetroZ-SBC
; BY JEAN-PHILIPPE GRAVEL, (c) 2019

#include "sio-init.z80"


#data	_HEAP,$8000



#code	_MAIN

START	DEFB	"WAIT START",10,13,0
STOP	DEFB	"WAIT STOP",10,13,0


MAIN:
	EI
	CALL	SIOA_EI

	LD	HL,START
	CALL	PRINT
	LD	BC,2000
	CALL	WAIT
	LD	HL,STOP
	CALL	PRINT

LOOP:
	JR	LOOP

KEY_PRESSED:
	CALL	PUTCHAR
	RET



; ***************************************************************************
; Wait for BC milliseconds. Timed according to RetroZ/RC2014 clock speed
; at 7.3728MHz. When the function exits, BC is 0.
; 
; Core code taken from Mr. Eric Carr's article titled Z80 DELAY LOOPS at 
;
;               http://www.paleotechnologist.net/?p=2589 
;
; I did some adjustments to fit my needs.
;
;
; Remarks:
;
; Adjust DE in the function to account for your clock speed.
;
; At 7.3728, it takes 307.2 inner loops to reach 1ms. The outer loop takes 
; 34 clock ticks, thus by removing 2.2 pass in the inner loop (305) it adds 
; up to a little under 1ms per outer loop. I do not account for the 
; CALL WAIT, the two PUSHs,  POPs and the RET instruction timings since that 
; would be a serious mind fuck to adjust the last DE value to make a perfect 
; timing.
;
; I calculated an imprecision of 0.1671 second on a period of 65.535 seconds,
; which is the maximum wait time of that function. Good enough I guess...
; ***************************************************************************
WAIT:
	PUSH	DE
	PUSH	AF
WAIT_OUTER:			; 34 clock ticks to execute the outer loop.
	LD	DE,305		; Approx. 1ms for the inner loop to complete,
				; adjust that value according to your clk spd.
WAIT_INNER:			; 24 clock ticks required for a signle pass 
	DEC	DE
	LD	A,D
	OR	E
	JP	NZ,WAIT_INNER
	DEC	BC
	LD	A,B
	OR	C
	JP	NZ,WAIT_OUTER
	POP	AF
	POP	DE
	RET
	




