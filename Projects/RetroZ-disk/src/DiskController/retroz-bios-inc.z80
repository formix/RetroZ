#if !defined(_PC)

_PC             DEFL    0               ;Parameter counter


;Adds the content of &reg to the stack and increment the _PARAM_COUNT label.
                MACRO   _ADDRP &reg
                PUSH    &reg
_PC             DEFL    {_PC + 1}
                ENDM


;Adds a litteral 16 bits parameter to the stack then increment the
;_PARAM_COUNT label. Register values are preserved.
                MACRO   _ADDLP &lit
                PUSH	HL
                LD      HL,&lit
                EX      (SP),HL
_PC             DEFL    {_PC + 1}
                ENDM


;Macro that calls a procedure &proc. This macro cleans the stack from the
;parameters added with _ADD_PARAM or ADD_LPARAM. Register HL and DE may be
;changed if the subroutine returns respectively a 16(HL) or 32(DEHL) bits 
;value.
                MACRO   _CALL &proc
_PC_&proc       DEFL    {_PC}
_PC             DEFL    0
                CALL    _PUSH
                CALL    &proc
                CALL    _POP
                _CLEANP _PC_&proc
                ENDM


;Recursive macro that cleans &cnt parameters from the stack.
                MACRO   _CLEANP &cnt
                IF &cnt > 0
                  EX      (SP),HL
                  POP     HL
                  _CLEANP {&cnt - 1}
                ENDIF
                ENDM


;Loads the register &reg with the parameter at index &idx
;Since IY is used to get at parameters, its not possible to load
;a parameter into IX or IY using this macro. First parameter is at index 0.
                MACRO   _GETP &reg, &idx
                LD      IY,14
                ADD     IY,SP
                LD      &reg, (IY+{&idx * 2})
                ENDM


;Return the content of &reg1 at the stack position of HL. The content of IY
;can not be returned using this macro.
                MACRO   _RET_HL &reg1
                LD      IY,0
                ADD     IY,SP
                LD      (IY+12),&reg1
                RET
                ENDM



;Return the content of &reg1 at the stack position of HL and the
;content of &reg2 at the DE stack position. The content of IX or IY cannot
;be returned by this macro.
                MACRO   _RET_DEHL &reg1, &reg2
                LD      IY,0
                ADD     IY,SP
                LD      (IY+12),&reg1
                LD      (IY+10),&reg2
                RET
                ENDM


#endif

; +++ global symbols +++

ATTR_BLINK                      EQU     $0035
ATTR_BRIGHT                     EQU     $0031
ATTR_DIM                        EQU     $0032
ATTR_HIDDEN                     EQU     $0038
ATTR_RESET                      EQU     $0030
ATTR_REVERSE                    EQU     $0037
ATTR_UNDERSCORE                 EQU     $0034
BC_DIVBY_DE                     EQU     $02A1
CLS                             EQU     $01B1
COLOR_BLACK                     EQU     $0030
COLOR_BLUE                      EQU     $0034
COLOR_CYAN                      EQU     $0036
COLOR_GREEN                     EQU     $0032
COLOR_MAGENTA                   EQU     $0035
COLOR_RED                       EQU     $0031
COLOR_WHITE                     EQU     $0037
COLOR_YELLOW                    EQU     $0033
DIV16                           EQU     $02A1
DRAW_LINE                       EQU     $03E7
DRAW_RECT                       EQU     $0462
DRAW_ROW                        EQU     $0423
ESC                             EQU     $001B
GETCHAR                         EQU     $0170
INPC                            EQU     $00F4
ITOA                            EQU     $02BE
MEMDUMP                         EQU     $0554
MUL16                           EQU     $01F0
MUL8                            EQU     $01D4
MUL_BC_DE_DEHL                  EQU     $01F0
OUTC                            EQU     $00DE
_POP                            EQU     $06AB
PRINT_ENDL                      EQU     $0165
PRINT                           EQU     $019C
_PUSH                           EQU     $06A1
PUTCHAR                         EQU     $011C
RTS_OFF                         EQU     $00A1
RTS_ON                          EQU     $00AA
SET_ATTRIBUTE                   EQU     $0346
SET_COLOR                       EQU     $0312
SET_POS                         EQU     $0366
SLEEP                           EQU     $01B7
START_RX_INT                    EQU     $00B3
STOP_RX_INT                     EQU     $00BC
TOHEX                           EQU     $065F
